Protocol provides you a basic mechanism of polymorphism!

Example:

=================================

main() ->
    barley:reparse("pkgs/protocol/protocol.barley"), % Compile PROTOCOL package
    barley:reparse("pkgs/protocol/test.barley"), % Compile test module
    protocol:prepare(),
    Protocol = protocol:protocol([sum, div]), % Create a unit of protocol unit
    protocol:register(test, Protocol), % Register protocol in protocol base
    protocol:secure(test). % Check protocol's module

================================

Usage:

prepare() % => PROTOCOL uses UNIT_CONSTRUCTOR, so it needs to be compiled

protocol(NAME) % => Returns a protocol unit

add_method(PROTO, METHOD) % => Adds a METHOD to a PROTO's method list

register(NAME, PROTO) % => Register PROTO to a NAME

deprecate(NAME) % => Removes protocol from base

secure(N) % => Check Protocol, that was linked to N module